name: Test

on:
  pull_request:
    branches: [ develop, main ]
  push:
    branches:
      - '*'

  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: create .env file
        run: |
          echo FASTAPI_HOST=${{ secrets.FASTAPI_HOST }} >> .env
          echo FASTAPI_PORT=${{ secrets.FASTAPI_PORT }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo USER_AGENT='Some egent' >> .env
          echo AUTOMATION_CONTROLLED=${{ secrets.AUTOMATION_CONTROLLED }} >> .env
          echo URL_LOCALHOST_FRONT=${{ secrets.URL_LOCALHOST_FRONT }} >> .env
          echo URL_BRENDBOOST_BACK=${{ secrets.URL_BRENDBOOST_BACK }} >> .env
          echo URL_BRENDBOOST_FRONT=${{ secrets.URL_BRENDBOOST_FRONT }} >> .env
          echo ORGANIZATIONS_API_KEY_YANDEX_KEY=${{ secrets.ORGANIZATIONS_API_KEY_YANDEX_KEY }} >> .env
          echo GEOCODER_API_KEY_YANDEX_KEY=${{ secrets.GEOCODER_API_KEY_YANDEX_KEY }} >> .env
          echo ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }} >> .env
          echo GOOGLE_CHROME_BIN=${{ secrets.GOOGLE_CHROME_BIN }} >> .env
          echo CHROMEDRIVER_PATH=${{ secrets.CHROMEDRIVER_PATH }} >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo JWT_ACCESS_TTL=${{ secrets.JWT_ACCESS_TTL }} >> .env
          echo JWT_ALGORITHM=${{ secrets.JWT_ALGORITHM }} >> .env
          echo JWT_REFRESH_TTL=${{ secrets.JWT_REFRESH_TTL }} >> .env
          echo MONGO_PORT='27017' >> .env
          echo MONGO_URI='mongodb://mongodb:27017' >> .env
      - name: Build docker
        run: docker-compose up -d --build
      - name: Test
        env:
          COMPOSE_INTERACTIVE_NO_CLI: 1
        run: docker-compose exec -T app pytest
